name: CI

on:
  schedule:
    - cron: '0 0 * * 0'
  push:
    branches:
      - master
      - staging
      - trying
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup `stable-x86_64-unknown-linux-gnu`
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable-x86_64-unknown-linux-gnu
          default: true
          profile: minimal
          components: rustfmt,clippy

      - name: Setup `1.43.0-x86_64-unknown-linux-gnu`
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.43.0-x86_64-unknown-linux-gnu
          default: false
          profile: minimal
          components: rustfmt,clippy

      - name: Setup `1.44.1-x86_64-unknown-linux-gnu`
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.44.1-x86_64-unknown-linux-gnu
          default: false
          profile: minimal
          components: rustfmt,clippy

      - name: cargo-fmt (`crates`)
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --manifest-path ./crates/Cargo.toml -- --check
          toolchain: stable

      - name: cargo-fmt (`verification/library-checker`)
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path ./verification/library-checker/Cargo.toml -- --check
          toolchain: 1.43.0

      - name: cargo-fmt (`verification/yukicoder`)
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path ./verification/yukicoder/Cargo.toml -- --check
          toolchain: 1.44.1

      - name: cargo-clippy (`crates`)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path ./crates/Cargo.toml -- -D warnings
          toolchain: stable

      - name: cargo-clippy (`verification/library-checker`)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path ./verification/library-checker/Cargo.toml -- -D warnings
          toolchain: 1.43.0

      - name: cargo-clippy (`verification/yukicoder`)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path ./verification/yukicoder/Cargo.toml -- -D warnings
          toolchain: 1.44.1

  verify:
    name: Verify
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout (v1)
        uses: actions/checkout@v1

      - name: Setup Rust (nightly)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-x86_64-unknown-linux-gnu
          default: false
          profile: minimal
          components: rustfmt

      - name: Setup Rust (1.43.0)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.43.0-x86_64-unknown-linux-gnu
          default: false
          profile: minimal

      - name: Setup Rust (1.44.1)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.44.1-x86_64-unknown-linux-gnu
          default: false
          profile: minimal

      - name: Install cargo-udeps
        run: |
          VERSION=0.1.15
          wget "https://github.com/est31/cargo-udeps/releases/download/v$VERSION/cargo-udeps-v$VERSION-x86_64-unknown-linux-gnu.tar.gz"
          tar xzvf "./cargo-udeps-v$VERSION-x86_64-unknown-linux-gnu.tar.gz" -C /tmp/
          echo "/tmp/cargo-equip-v$VERSION-x86_64-unknown-linux-gnu" >> $GITHUB_PATH

      - name: Setup Python
        uses: actions/setup-python@v1

      - name: Install oj-verify
        run: pip3 install -U online-judge-verify-helper

      - name: oj-verify
        run: oj-verify all
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          YUKICODER_TOKEN: ${{ secrets.YUKICODER_TOKEN }}
          GH_PAT: ${{ secrets.GH_PAT }}
